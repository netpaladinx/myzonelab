data:
  # train
  train:
    type: myzoneufc_reid
    name: train_data
    data_transforms:
      - type: reid_transform.batch_random_warp
        translate_prob: 0.5
        scale_prob: 0.5
        scale_sigma: 0.5
        rotate_factor: 10
      - type: to_tensor
      - type: normalize
      - type: reid_transform.generate_cls_target
      - type: reid_transform.generate_ml_masks
      - type: collect
        shared: [flip_pairs, mask_pos, mask_neg, mask_tri, size_params]
        inputs: [img]
        targets: [cls_target]
    data_loader:
      num_workers: 4
    data_params:
      mode: train
      n_samples_per_id: 8
      min_ids_per_batch: 8
      batch_size: 64
      n_classes: 16
  # validation
  val:
    type: myzoneufc_reid
    name: val_data
    data_transforms:
      - type: reid_transform.batch_warp
      - type: to_tensor
      - type: normalize
      - type: collect
        shared: flip_pairs
        inputs: [img]
    data_loader:
      num_workers: 0
      batch_size: 8
  # validation on transfer
  val_transfer:
    type: myzoneufc_reid
    name: val_data
    data_transforms:
      - type: reid_transform.batch_warp
      - type: to_tensor
      - type: normalize
      - type: collect
        shared: flip_pairs
        inputs: [img]
    data_loader:
      num_workers: 0
      batch_size: 8
  # test
  test:
    type: myzoneufc_reid
    name: test_data
    data_transforms:
      - type: reid_transform.batch_warp
      - type: to_tensor
      - type: normalize
      - type: collect
        shared: flip_pairs
        inputs: [img]
    data_loader:
      num_workers: 0
      batch_size: 8
  # common
  data_params:
    input_size: [192, 256] # w,h
    input_channels: 3

model:
  type: reid_model.topdown
  backbone:
    type: resnets16
    depth: 50
    in_channels: $data.data_params.input_channels
  head:
    type: reid_head_v2
    out_channels: 128
    feature_extractor:
      - type: feature_extractor
        name: feature_extractor_v0
        abbr: fev0
        version: 0
        pool_type: attn_pool
      - type: feature_extractor
        name: feature_extractor_v1
        abbr: fev1
        version: 0
        pool_type: attn_pool
      - type: feature_extractor
        name: feature_extractor_v2
        abbr: fev2
        version: 0
        pool_type: attn_pool
      - type: feature_extractor
        name: feature_extractor_v3
        abbr: fev3
        version: 0
        pool_type: attn_pool
      - type: feature_extractor
        name: feature_extractor_v4
        abbr: fev4
        version: 0
        pool_type: attn_pool
      - type: feature_extractor
        name: feature_extractor_v5
        abbr: fev5
        version: 0
        pool_type: attn_pool
      - type: feature_extractor
        name: feature_extractor_v6
        abbr: fev6
        version: 0
        pool_type: attn_pool
      - type: feature_extractor
        name: feature_extractor_v7
        abbr: fev7
        version: 0
        pool_type: attn_pool
  recon_head:
    type: reid_recon_head
    output_size: [256, 192] # h,w
  loss:
    type: reid_loss_v2
    feature_loss_weight: 0.
    output_loss_weight: 1.
    cls_loss:
      type: classification_v2
      n_classes: $data.train.data_params.n_classes
      enable_temperature: true
      label_smoothing: 0.2
      intra_relax: 0.3
      inter_relax: 0.0
      radial_weight: 1.
      centroid_weight: 1.
      loss_weight: 1.
    ml_loss:
      type: metriclearning_v2
      margin_pos: 0.2
      margin_neg: 0.1
      margin_tri: 0.1
      pos_weight: 1.
      neg_weight: 1.
      tri_weight: 1.
  recon_loss:
    type: reid_recon_loss
  accuracy:
    type: reid_postprocessor.accuracy_v2
    distance: l2
  predict:
    type: reid_postprocessor.predict
  eval_cfg:
    return_all_features: true

complex_train:
  stations:
    # station 1
    - name: train_st
      threads:
        - name: train_th
          data: train
          start_outer_round: 1
          max_inner_steps: 500
          max_steps: 5000
          global_vars: [step]
          terminate_inner_loop_when_closed: true
          will_terminate_outer_loop_when_finished: true
          optim:
            module: [backbone, head, loss]
            optimizer:
              type: adam
              lr: 0.0005
            lr_scheduler:
              type: step_lr
              by_epoch: false
              step: [3000, 4000, 4500]
              gamma: 0.3
              warmup: linear
              warmup_ratio: 0.01
              warmup_steps: 200
            optim_scheduler:
              type: optim
          summarize:
            interval: 50
          save:
            by_epoch: false
            interval: 500
            max_keep_ckpts: -1
    # station 2
    - name: validate_st
      threads:
        - name: validate_th
          mode: val
          data: val
          max_inner_epochs: 1
          progressbar_unit: item
          val_step_kwargs:
            return_recon: true
          validate:
            save_best_by: output_map
            metric_greater_better: true
            save_prefix: val_
    # station 3
    - name: validate_transfer_st
      threads:
        - name: validate_transfer_th
          mode: val
          data: val_transfer
          max_inner_epochs: 1
          progressbar_unit: item
          val_step_kwargs:
            return_recon: true
          validate:
            save_best_by: output_map
            metric_greater_better: true
            save_prefix: val_transfer_
